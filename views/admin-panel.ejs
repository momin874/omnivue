<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sticky Sidebar</title>
  <link rel="stylesheet" href="/css/adminPanelStyles.css">
  <script src="/js/adminpanel.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
    const services = <%- JSON.stringify(services) %>;
    const inclusions = <%- JSON.stringify(inclusions) %>;
    const processes = <%- JSON.stringify(processes) %>;
  
    const formContainer = document.getElementById('form-container');
  
    document.querySelectorAll('.service-link').forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        // Get selected service ID
        const serviceId = e.target.dataset.id;
        // Find the selected service data
        const selectedService = services.find(service => service.id === serviceId);
        const selectedInclusions = inclusions.filter(inclusion => inclusion.service_id === serviceId);
        const selectedProcesses = processes.filter(process => process.service_id === serviceId);
  
        // Generate the form HTML dynamically
        const formHTML = `
          <form id="customForm"data-id=${serviceId} >
            <h1>Edit Service: ${selectedService.name}</h1>
  
            <!-- Name Field -->
            <label for="name">Name</label>
            <input type="text" id="name" name="name" value="${selectedService.name}" required>
  
            <!-- Slogan Field -->
            <label for="slogan">Slogan</label>
            <input type="text" id="slogan" name="slogan" value="${selectedService.slogan || ''}" required>
  
            <!-- Inclusions -->
            <fieldset>
              <legend>Inclusions</legend>
              ${selectedInclusions.map(inclusion => `
                <div class="inclusion">
                  <label>Title</label>
                  <input type="text" name="inclusionTitle[]" value="${inclusion.name}" required>
  
                  <label>Description</label>
                  <textarea name="inclusionDescription[]" required>${inclusion.description}</textarea>

                  <button type="button" class="remove-inclusion">Remove Inclusion</button>

                </div>
              `).join('')}
              <button type="button" id="addInclusion">Add Inclusion</button>
            </fieldset>
  
            <!-- Processes -->
            <fieldset>
              <legend>Processes</legend>
              ${selectedProcesses.map(process => `
                <div class="process">
                  <label>Number</label>
                  <input type="number" name="processNumber[]" value="${process.order}" required>
  
                  <label>Name</label>
                  <input type="text" name="processName[]" value="${process.name}" required>
  
                  <label>Description</label>
                  <textarea name="processDescription[]" required>${process.description}</textarea>
                  <button type="button" class="remove-process">Remove Process</button>

                </div>
              `).join('')}
              <button type="button" id="addProcess">Add Process</button>
            </fieldset>
  
            <button type="submit" >Save</button>
          </form>
        `;
  
        // Replace the content inside the form container
        formContainer.innerHTML = formHTML;
      });
      
    });
    document.addEventListener('click', (e) => {
        if (e.target && e.target.id === 'addInclusion') {
          const inclusionsDiv = e.target.previousElementSibling;
          inclusionsDiv.insertAdjacentHTML('beforeend', `
            <div class="inclusion">
              <label>Title</label>
              <input type="text" name="inclusionTitle[]" required>
              <label>Description</label>
              <textarea name="inclusionDescription[]" required></textarea>
              <button type="button" class="remove-inclusion">Remove Inclusion</button>
            </div>
          `);
        }
      
        if (e.target && e.target.id === 'addProcess') {
          const processesDiv = e.target.previousElementSibling;
          processesDiv.insertAdjacentHTML('beforeend', `
            <div class="process">
              <label>Number</label>
              <input type="number" name="processNumber[]" required>
              <label>Name</label>
              <input type="text" name="processName[]" required>
              <label>Description</label>
              <textarea name="processDescription[]" required></textarea>
              <button type="button" class="remove-process">Remove Process</button>
            </div>
          `);
        }
        if (e.target && e.target.classList.contains('remove-inclusion')) {
        e.target.parentElement.remove();
      }

      // Handle removal of processes
      if (e.target && e.target.classList.contains('remove-process')) {
        e.target.parentElement.remove();
      }
      });
      document.body.addEventListener('submit', async (e) => {
        if (e.target.id === 'customForm') {
          e.preventDefault(); // Prevent default form submission

          // Gather form data
          const formData = new FormData(e.target);
          const formJSON = Object.fromEntries(formData.entries());

          // Handle inclusions and processes as arrays
          formJSON.inclusionTitle = formData.getAll('inclusionTitle[]');
          formJSON.inclusionDescription = formData.getAll('inclusionDescription[]');
          formJSON.processNumber = formData.getAll('processNumber[]');
          formJSON.processName = formData.getAll('processName[]');
          formJSON.processDescription = formData.getAll('processDescription[]');
          formJSON.id = e.target.dataset.id
          try {
            // Send PUT request to the server
            const token = localStorage.getItem('token')
            if (token) {
              const response = await fetch(`AdminPanel/updateService?token=${token}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(formJSON),
              });

              if (response.ok) {
                const result = await response.json();
                alert('Service updated successfully!');
                console.log(result);
              }
            }
            
          } catch (err) {
            console.error('Error:', err);
            alert('An error occurred while updating the service.');
          }
        }
      });
  });
  
  </script>
</head>
<body>
  <div class="container">
    <aside class="sidebar">
      <ul class="menu">
        <li>
          Home
        </li>
        <li>
          Services
          <ul class="submenu">
            <% services.forEach(service => { %>
              <li>
                <a href="#" class="service-link" data-id="<%= service.id %>">
                  <%= service.name %>
                </a>
              </li>
            <% }) %>
          </ul>
        </li>
        <li>
          About Us
          <ul class="submenu">
            <li>Our Vision</li>
            <li>Our Team</li>
          </ul>
        </li>
        <li><a href="#">Blog</a></li>
        <li><a href="#">Contact</a></li>
      </ul>
    </aside>

    <main class="content">
        <div class="form-container" id="form-container">
          
        </div>
    </main>
  </div>
</body>
</html>
